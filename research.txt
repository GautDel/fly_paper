very time you show a joke, store it in your database as "shown".
Store a value in your database for the last day you selected a joke.
Write a function that pulls that date from the database and stores it in memory.
Whenever you render the page, check if the current date is different from
the saved "last time I selected a joke" date. If so, pull a new joke from the
database which isn't saved as "shown", update its metadata to indicate that it's
been shown, and present that joke. Update your cache with today's date and the
joke you want to show there are lots of ways to do it. You could write a script
to update the metadata for each joke in your database with a "display date" that
goes up by 1 for each joke, then just pass the current date into your request for
the joke to look it up by date. that would be another way

-----------------------------------

TO DO

4 AJAX FOR WIKI SECTION

Tidy Code in side nav
----------------------------------
NEW TASKS 2/12/2024
    - Add 500 error page

----------------------------------
BUG FIXES
    - Add padding to side menu tab on journal section
    - Use Auth::user()->id instead of passing in via form
    - Fix bug with update form (update post) error handling...
      sending back a 404... Prob to do with validation
    - Make item inside cart a link to product
    - Add orders section to account page
    - Fix search bar in wiki
    - Fix error when accessing /cart/shipping while logged in
    - Fix error when accessing /cart/shipping while logged in
    - Fix Fly of the day
    - Add Article for 'River talk'
    - Add fish species in wiki
    - Add fly tying materials in wiki
    - Add more flies in wiki
    - Add more products and ratings to market section
    - Add 'on sale', 'new', etc to fly card in market section and product section
    - Add more product variants
    - Add in stock to product page and make it so quantity added matches
    - Fix issue with slider on market page
    - Add 'no reviews yet' if no angler reviews present
    - Add images for everything
    - Add table to link images to products
    - Make recommended products dynamic
    - Fix float issue with prices. Not showing final 0.
    - Remove cursor-pointer on checkout success
    - Add variants to order (useful for customer and for company)
    - Add ASCII art to account page
    - Add 'Add a log' next to button in fishing logs/same for notes
    - fix typo 'or' into 'our' when cart is empty in cart page
    - Add functionality to upvote that allows user to remove their vote if
      upvoted/downvoted
    - Change 'journal' to 'View logs' and make logs page (add pagination)
    - Add feature that allows log to be private
    - DEPLOYYYYYYY
----------------------------------
 Addresses
    - id
    - first_name
    - last_name
    - address_1
    - address_2
    - city
    - state_province
    - zip
    - country
    - user_id

----------------------------------
PRODUCT RELATIONS

- PRODUCT --+
    - id
    - name
    - description
    - img
    - price
    - category_id FK (fly, rod, reel, line, tippet, etc)

- PRODUCT ITEM
    - id
    - product_id FK
    - SKU
    - qty_in_stock
    - product_image
    - price
    - brand


- PRODUCT CONFIGURATION (MANY TO MANY)
    - product_item_id FK
    - variation_option_id FK

- PRODUCT CATEGORY --+
    - id
    - name
    - parent_category_id FK (FK to id - self join)

- PRODUCT VARIATION --+
    - id
    - category_id FK
    - name

- VARIATION OPTION
    - id
    - variation_id FK
    - value

----------------------------------
JOURNAL RELATIONS

- Fish log
    - id +
    - fish + 100
    - weight + 10
    - mass_units + only the ones from the select are valid - implement
    - length + 10
    - length_units + only the ones from the select are valid - implement
    - rod + 50
    - rod_length + only the ones from the select are valid - implement
    - rod_weight + only the ones from the select are valid - implement
    - reel + 50
    - reel_weight + only the ones from the select are valid - implement
    - line + 75
    - line_type + only the ones from the select are valid - implement
    - line_weight + only the ones from the select are valid - implement
    - tippet + 50
    - tippet_weight + only the ones from the select are valid - implement
    - fly +  50
    - fly_type +  only the ones from the select are valid - implement
    - hook_size + only the ones from the select are valid - implement
    - location + 255
    - weather + only the ones from the select are valid - implement
    - day_times + only the ones from the select are valid - implement
    - precise_time + Can be nullable
    - water_clarity +
    - water_movement +
    - note + 500

    -- Each table is a one to many
    -- One log can have one of each table
    -- Each table can have many logs

- Note
    - id
    - title
    - body
    - date
    - user_id (foreign key)

----------------------------------

FORUM RELATIONS

- Forum category
    - id
    - name

- Forum post
    - id
    - title
    - body
    - vote
    - user_id (foreign key)
    - category_id (foreign key)

- Forum Post Votes
    - id
    - user_id
    _ post_id

- Forum post comments
    - id
    - comment
    - vote
    - user_id (foreign key)
    - post_id (foreign key)

- Forum post vote
    - id
    - forum_post_id
    - user_id

---------------------------------

ONE TO MANY - FLY -> COMMENTS

- comment:
    - user_id
    - fly_id
    - comment_id
    - comment
    - time of comment

-----------------------------------

