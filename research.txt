very time you show a joke, store it in your database as "shown".
Store a value in your database for the last day you selected a joke.
Write a function that pulls that date from the database and stores it in memory.
Whenever you render the page, check if the current date is different from
the saved "last time I selected a joke" date. If so, pull a new joke from the
database which isn't saved as "shown", update its metadata to indicate that it's
been shown, and present that joke. Update your cache with today's date and the
joke you want to show there are lots of ways to do it. You could write a script
to update the metadata for each joke in your database with a "display date" that
goes up by 1 for each joke, then just pass the current date into your request for
the joke to look it up by date. that would be another way

-----------------------------------

TO DO
------- Finish website by 21 January
2 Do a tidy up of code
3 Fix bug with update form error handling... sending back a 404...
4 AJAX FOR WIKI SECTION
5 Work on Journal section
5a Add Notes Migration/Seeder/Model
5c Journal is all AJAX
Add flash message when note is created
Add note without refresh

When clicked on Notes, show notes section
when clicked on fish log, show log section
Use Auth::user()->id instead of passing in via form


----------------------------------
JOURNAL RELATIONS

- Note
    - id
    - title
    - body
    - date
    - user_id (foreign key)

- Fish log
    - id
    - fish
    - weight
    - length
    - rod
    - reel
    - fly
    - line
    - tippet
    - hook size
    - location
    - weather
    - water_clarity
    - time
    - note

----------------------------------

FORUM RELATIONS

- Forum category
    - id
    - name

- Forum post
    - id
    - title
    - body
    - vote
    - user_id (foreign key)
    - category_id (foreign key)

- Forum Post Votes
    - id
    - user_id
    _ post_id

- Forum post comments
    - id
    - comment
    - vote
    - user_id (foreign key)
    - post_id (foreign key)

- Forum post vote
    - id
    - forum_post_id
    - user_id

---------------------------------

ONE TO MANY - FLY -> COMMENTS

- comment:
    - user_id
    - fly_id
    - comment_id
    - comment
    - time of comment

-----------------------------------

